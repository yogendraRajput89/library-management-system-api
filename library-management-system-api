package org.example;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

class Book {
    int id;
    String title;
    String author;
    boolean isIssued;

    Book(int id, String title, String author) {
        this.id = id;
        this.title = title;
        this.author = author;
        this.isIssued = false;
    }

    public String toString() {
        return "ID: " + id + ", Title: " + title + ", Author: " + author + ", Issued: " + isIssued;
    }
}

class User {
    int id;
    String name;

    User(int id, String name) {
        this.id = id;
        this.name = name;
    }
}

class Library {
    Map<Integer, Book> books = new HashMap<>();
    Scanner scanner = new Scanner(System.in);

    void addBook() {
        System.out.print("Enter Book Title: ");
        String title = scanner.nextLine();
        System.out.print("Enter Author: ");
        String author = scanner.nextLine();

        int id = books.size() + 1;
        books.put(id, new Book(id, title, author));
        System.out.println("Book added with ID: " + id);
    }

    void viewBooks() {
        for (Book book : books.values()) {
            System.out.println(book);
        }
    }

    void issueBook() {
        System.out.print("Enter Book ID to Issue: ");
        int id = scanner.nextInt();
        scanner.nextLine();

        Book book = books.get(id);
        if (book != null && !book.isIssued) {
            book.isIssued = true;
            System.out.println("Book issued successfully.");
        } else {
            System.out.println("Book not available or already issued.");
        }
    }

    void returnBook() {
        System.out.print("Enter Book ID to Return: ");
        int id = scanner.nextInt();
        scanner.nextLine();

        Book book = books.get(id);
        if (book != null && book.isIssued) {
            book.isIssued = false;
            System.out.println("Book returned successfully.");
        } else {
            System.out.println("Book was not issued.");
        }
    }

    void menu() {
        while (true) {
            System.out.println("\n1. Add Book\n2. View Books\n3. Issue Book\n4. Return Book\n5. Exit");
            System.out.print("Choose: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // clear newline

            switch (choice) {
                case 1: addBook(); break;
                case 2: viewBooks(); break;
                case 3: issueBook(); break;
                case 4: returnBook(); break;
                case 5:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice.");
            }
        }
    }
}

public class LibraryManagementSystem {
    public static void main(String[] args) {
        Library library = new Library();
        library.menu();
    }
}
